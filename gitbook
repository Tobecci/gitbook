#!/bin/bash

# A multipurpose script that is easily modified to include other functions
# Author: sphinx
# website:www.naijacodex.tk
RED='\033[0;31m'
NC='\033[0m'
BP='\033[1;35m'
BY='\033[1;33m'

menu(){
    echo -e "-------------------------------------------
${BP}SELECT AN ITEM FROM THE MENU
[1]  git status
[2]  add all files
[3]  commit
[4]  push to repo
[5]  synchronize repository
[6]  show remotes
[7]  add remote
[8]  show branches
[9]  add a branch
[10] checkout a branch
[11] delete a branch ${NC}
--------------------------------------------"
echo -e "${BY}"
read -p "CHOOSE A NUMBER:" choice;
echo -e "${NC}"

if [ $choice == 1 ]
then
clear
git status
question

elif [ $choice == 2 ]
then
clear
git add --all
git status
question

elif [ $choice == 3 ]
then
clear
read -p 'Enter commit message: ' msg
git commit -m "$msg"
question

elif [ $choice == 4 ]
then
clear
read -p 'remote name:' remote
read -p 'branch on the remote:' branch
git push $remote $branch
question

elif [ $choice == 5 ]
then
clear
echo "MAKE SURE YOU ARE ON THE BRANCH THAT IS TO BE SYNCHRONIZED"
git branch
read -p 'Upstream remote name:' upstream
read -p 'branch to be synchronized with:' branch
git fetch $upstream
git pull $upstream $branch
question

elif [ $choice == 6 ]
then
clear
git remote -v
question

elif [ $choice == 7 ]
then
clear
read -p 'Enter remote name: ' name
read -p 'Enter remote url: ' url
git remote add $name $url
question

elif [ $choice == 8 ]
then
clear
git branch
question

elif [ $choice == 9 ]
then
clear
git branch
echo 'above are the branches existing'
read -p 'Enter branch name to create: ' name
git branch $name
question

elif [ $choice == 10 ]
then
clear
git branch
read -p 'which branch above do you want to checkout: ' name
git checkout $name
question

elif [ $choice == 11 ]
then
clear
git branch
read -p 'which branch above do you want to delete: ' name
git branch -D $name
question

else
echo -e "${RED}unknown option try again${NC}"
menu
fi
}

question(){
echo -e "${BY}"
read -p 'anything else? (y/n): ' choice
echo -e "${NC}"

if [ $choice == y -o $choice == Y ]
then
menu

elif [ $choice == n  -o $choice == N ]
then
echo -e "${RED}exiting${NC}";
exit

else
echo -e "${RED}option not recognized${NC}"
question
fi
}

#calls the function defined above
menu
